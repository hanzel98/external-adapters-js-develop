"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getJobMatrix = void 0;
const lib_1 = require("../docker-build/lib");
/**
 * Create a job matrix that allows our build pipeline to create and push
 * docker images
 */
async function getJobMatrix() {
    const branch = process.env.BRANCH || '';
    const prefix = process.env.IMAGE_PREFIX || '';
    const useLatest = !!process.env.LATEST;
    const dockerfile = await lib_1.generateFileJSON({ prefix, branch, useLatest }, { context: '.' });
    const adapter = Object.entries(dockerfile.services).map(([k, v]) => {
        return {
            name: k,
            type: v.build.labels[lib_1.DockerLabels.EA_TYPE],
        };
    });
    return { adapter };
}
exports.getJobMatrix = getJobMatrix;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGliLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2doYS9saWIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsNkNBQW9FO0FBU3BFOzs7R0FHRztBQUNJLEtBQUssVUFBVSxZQUFZO0lBQ2hDLE1BQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxJQUFJLEVBQUUsQ0FBQTtJQUN2QyxNQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLFlBQVksSUFBSSxFQUFFLENBQUE7SUFDN0MsTUFBTSxTQUFTLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFBO0lBRXRDLE1BQU0sVUFBVSxHQUFHLE1BQU0sc0JBQWdCLENBQUMsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxFQUFFLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7SUFDMUYsTUFBTSxPQUFPLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRTtRQUNqRSxPQUFPO1lBQ0wsSUFBSSxFQUFFLENBQUM7WUFDUCxJQUFJLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsa0JBQVksQ0FBQyxPQUFPLENBQUM7U0FDM0MsQ0FBQTtJQUNILENBQUMsQ0FBQyxDQUFBO0lBRUYsT0FBTyxFQUFFLE9BQU8sRUFBRSxDQUFBO0FBQ3BCLENBQUM7QUFkRCxvQ0FjQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERvY2tlckxhYmVscywgZ2VuZXJhdGVGaWxlSlNPTiB9IGZyb20gJy4uL2RvY2tlci1idWlsZC9saWInXG5cbmludGVyZmFjZSBKb2JNYXRyaXgge1xuICBhZGFwdGVyOiB7XG4gICAgbmFtZTogc3RyaW5nXG4gICAgdHlwZTogc3RyaW5nXG4gIH1bXVxufVxuXG4vKipcbiAqIENyZWF0ZSBhIGpvYiBtYXRyaXggdGhhdCBhbGxvd3Mgb3VyIGJ1aWxkIHBpcGVsaW5lIHRvIGNyZWF0ZSBhbmQgcHVzaFxuICogZG9ja2VyIGltYWdlc1xuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0Sm9iTWF0cml4KCk6IFByb21pc2U8Sm9iTWF0cml4PiB7XG4gIGNvbnN0IGJyYW5jaCA9IHByb2Nlc3MuZW52LkJSQU5DSCB8fCAnJ1xuICBjb25zdCBwcmVmaXggPSBwcm9jZXNzLmVudi5JTUFHRV9QUkVGSVggfHwgJydcbiAgY29uc3QgdXNlTGF0ZXN0ID0gISFwcm9jZXNzLmVudi5MQVRFU1RcblxuICBjb25zdCBkb2NrZXJmaWxlID0gYXdhaXQgZ2VuZXJhdGVGaWxlSlNPTih7IHByZWZpeCwgYnJhbmNoLCB1c2VMYXRlc3QgfSwgeyBjb250ZXh0OiAnLicgfSlcbiAgY29uc3QgYWRhcHRlciA9IE9iamVjdC5lbnRyaWVzKGRvY2tlcmZpbGUuc2VydmljZXMpLm1hcCgoW2ssIHZdKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5hbWU6IGssXG4gICAgICB0eXBlOiB2LmJ1aWxkLmxhYmVsc1tEb2NrZXJMYWJlbHMuRUFfVFlQRV0sXG4gICAgfVxuICB9KVxuXG4gIHJldHVybiB7IGFkYXB0ZXIgfVxufVxuIl19