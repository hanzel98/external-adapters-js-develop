"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.dominanceByCurrency = exports.getDominanceAdapter = void 0;
const tslib_1 = require("tslib");
const TokenAllocation = tslib_1.__importStar(require("@chainlink/token-allocation-adapter"));
const getDominanceAdapter = () => {
    const config = TokenAllocation.makeConfig();
    config.defaultMethod = 'marketCap';
    return TokenAllocation.makeExecute(config);
};
exports.getDominanceAdapter = getDominanceAdapter;
const dominanceByCurrency = (response, quote) => {
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    const { result, payload } = response;
    return Object.fromEntries(Object.entries(payload).map(([symbol, data]) => {
        const marketCap = data.quote[quote].marketCap;
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
        return [symbol, marketCap / result];
    }));
};
exports.dominanceByCurrency = dominanceByCurrency;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9taW5hbmNlRGF0YVByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2RvbWluYW5jZURhdGFQcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsNkZBQXNFO0FBRy9ELE1BQU0sbUJBQW1CLEdBQUcsR0FBWSxFQUFFO0lBQy9DLE1BQU0sTUFBTSxHQUFHLGVBQWUsQ0FBQyxVQUFVLEVBQUUsQ0FBQTtJQUMzQyxNQUFNLENBQUMsYUFBYSxHQUFHLFdBQVcsQ0FBQTtJQUNsQyxPQUFPLGVBQWUsQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUE7QUFDNUMsQ0FBQyxDQUFBO0FBSlksUUFBQSxtQkFBbUIsdUJBSS9CO0FBRU0sTUFBTSxtQkFBbUIsR0FBRyxDQUNqQyxRQUE2QixFQUM3QixLQUFhLEVBQ1csRUFBRTtJQUMxQiw2REFBNkQ7SUFDN0QsTUFBTSxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsR0FBRyxRQUFRLENBQUE7SUFDcEMsT0FBTyxNQUFNLENBQUMsV0FBVyxDQUN2QixNQUFNLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxFQUFFLEVBQUU7UUFDN0MsTUFBTSxTQUFTLEdBQUksSUFBWSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxTQUFTLENBQUE7UUFDdEQsb0VBQW9FO1FBQ3BFLE9BQU8sQ0FBQyxNQUFNLEVBQUUsU0FBVSxHQUFHLE1BQU0sQ0FBQyxDQUFBO0lBQ3RDLENBQUMsQ0FBQyxDQUNILENBQUE7QUFDSCxDQUFDLENBQUE7QUFiWSxRQUFBLG1CQUFtQix1QkFhL0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBUb2tlbkFsbG9jYXRpb24gZnJvbSAnQGNoYWlubGluay90b2tlbi1hbGxvY2F0aW9uLWFkYXB0ZXInXG5pbXBvcnQgeyBFeGVjdXRlIH0gZnJvbSAnQGNoYWlubGluay90eXBlcydcblxuZXhwb3J0IGNvbnN0IGdldERvbWluYW5jZUFkYXB0ZXIgPSAoKTogRXhlY3V0ZSA9PiB7XG4gIGNvbnN0IGNvbmZpZyA9IFRva2VuQWxsb2NhdGlvbi5tYWtlQ29uZmlnKClcbiAgY29uZmlnLmRlZmF1bHRNZXRob2QgPSAnbWFya2V0Q2FwJ1xuICByZXR1cm4gVG9rZW5BbGxvY2F0aW9uLm1ha2VFeGVjdXRlKGNvbmZpZylcbn1cblxuZXhwb3J0IGNvbnN0IGRvbWluYW5jZUJ5Q3VycmVuY3kgPSAoXG4gIHJlc3BvbnNlOiBSZWNvcmQ8c3RyaW5nLCBhbnk+LFxuICBxdW90ZTogc3RyaW5nLFxuKTogUmVjb3JkPHN0cmluZywgbnVtYmVyPiA9PiB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbiAgY29uc3QgeyByZXN1bHQsIHBheWxvYWQgfSA9IHJlc3BvbnNlXG4gIHJldHVybiBPYmplY3QuZnJvbUVudHJpZXMoXG4gICAgT2JqZWN0LmVudHJpZXMocGF5bG9hZCkubWFwKChbc3ltYm9sLCBkYXRhXSkgPT4ge1xuICAgICAgY29uc3QgbWFya2V0Q2FwID0gKGRhdGEgYXMgYW55KS5xdW90ZVtxdW90ZV0ubWFya2V0Q2FwXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5vbi1udWxsLWFzc2VydGlvblxuICAgICAgcmV0dXJuIFtzeW1ib2wsIG1hcmtldENhcCEgLyByZXN1bHRdXG4gICAgfSksXG4gIClcbn1cbiJdfQ==