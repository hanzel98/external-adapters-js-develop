"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.execute = void 0;
const ea_bootstrap_1 = require("@chainlink/ea-bootstrap");
const cryptoVolatilityIndex_1 = require("./cryptoVolatilityIndex");
const customParams = {
    contract: ['contractAddress', 'contract'],
    multiply: false,
    heartbeatMinutes: false,
    isAdaptive: false,
    cryptoCurrencies: false,
    deviationThreshold: false,
    lambdaMin: false,
    lambdaK: false,
    network: false,
};
const execute = async (input, context) => {
    const validator = new ea_bootstrap_1.Validator(input, customParams);
    if (validator.error)
        throw validator.error;
    const jobRunID = validator.validated.id;
    const result = await cryptoVolatilityIndex_1.calculate(validator.validated, input.data, context);
    const response = { data: { result }, status: 200 };
    return ea_bootstrap_1.Requester.success(jobRunID, response);
};
exports.execute = execute;
exports.default = exports.execute;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRhcHRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9hZGFwdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDBEQUE4RDtBQUU5RCxtRUFBbUQ7QUFFbkQsTUFBTSxZQUFZLEdBQUc7SUFDbkIsUUFBUSxFQUFFLENBQUMsaUJBQWlCLEVBQUUsVUFBVSxDQUFDO0lBQ3pDLFFBQVEsRUFBRSxLQUFLO0lBQ2YsZ0JBQWdCLEVBQUUsS0FBSztJQUN2QixVQUFVLEVBQUUsS0FBSztJQUNqQixnQkFBZ0IsRUFBRSxLQUFLO0lBQ3ZCLGtCQUFrQixFQUFFLEtBQUs7SUFDekIsU0FBUyxFQUFFLEtBQUs7SUFDaEIsT0FBTyxFQUFFLEtBQUs7SUFDZCxPQUFPLEVBQUUsS0FBSztDQUNmLENBQUE7QUFFTSxNQUFNLE9BQU8sR0FBWSxLQUFLLEVBQUUsS0FBcUIsRUFBRSxPQUF1QixFQUFFLEVBQUU7SUFDdkYsTUFBTSxTQUFTLEdBQUcsSUFBSSx3QkFBUyxDQUFDLEtBQUssRUFBRSxZQUFZLENBQUMsQ0FBQTtJQUNwRCxJQUFJLFNBQVMsQ0FBQyxLQUFLO1FBQUUsTUFBTSxTQUFTLENBQUMsS0FBSyxDQUFBO0lBRTFDLE1BQU0sUUFBUSxHQUFHLFNBQVMsQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFBO0lBRXZDLE1BQU0sTUFBTSxHQUFHLE1BQU0saUNBQVMsQ0FBQyxTQUFTLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUE7SUFDeEUsTUFBTSxRQUFRLEdBQUcsRUFBRSxJQUFJLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLENBQUE7SUFDbEQsT0FBTyx3QkFBUyxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsUUFBUSxDQUFDLENBQUE7QUFDOUMsQ0FBQyxDQUFBO0FBVFksUUFBQSxPQUFPLFdBU25CO0FBRUQsa0JBQWUsZUFBTyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVxdWVzdGVyLCBWYWxpZGF0b3IgfSBmcm9tICdAY2hhaW5saW5rL2VhLWJvb3RzdHJhcCdcbmltcG9ydCB7IEFkYXB0ZXJDb250ZXh0LCBBZGFwdGVyUmVxdWVzdCwgRXhlY3V0ZSB9IGZyb20gJ0BjaGFpbmxpbmsvdHlwZXMnXG5pbXBvcnQgeyBjYWxjdWxhdGUgfSBmcm9tICcuL2NyeXB0b1ZvbGF0aWxpdHlJbmRleCdcblxuY29uc3QgY3VzdG9tUGFyYW1zID0ge1xuICBjb250cmFjdDogWydjb250cmFjdEFkZHJlc3MnLCAnY29udHJhY3QnXSxcbiAgbXVsdGlwbHk6IGZhbHNlLFxuICBoZWFydGJlYXRNaW51dGVzOiBmYWxzZSxcbiAgaXNBZGFwdGl2ZTogZmFsc2UsXG4gIGNyeXB0b0N1cnJlbmNpZXM6IGZhbHNlLFxuICBkZXZpYXRpb25UaHJlc2hvbGQ6IGZhbHNlLFxuICBsYW1iZGFNaW46IGZhbHNlLFxuICBsYW1iZGFLOiBmYWxzZSxcbiAgbmV0d29yazogZmFsc2UsXG59XG5cbmV4cG9ydCBjb25zdCBleGVjdXRlOiBFeGVjdXRlID0gYXN5bmMgKGlucHV0OiBBZGFwdGVyUmVxdWVzdCwgY29udGV4dDogQWRhcHRlckNvbnRleHQpID0+IHtcbiAgY29uc3QgdmFsaWRhdG9yID0gbmV3IFZhbGlkYXRvcihpbnB1dCwgY3VzdG9tUGFyYW1zKVxuICBpZiAodmFsaWRhdG9yLmVycm9yKSB0aHJvdyB2YWxpZGF0b3IuZXJyb3JcblxuICBjb25zdCBqb2JSdW5JRCA9IHZhbGlkYXRvci52YWxpZGF0ZWQuaWRcblxuICBjb25zdCByZXN1bHQgPSBhd2FpdCBjYWxjdWxhdGUodmFsaWRhdG9yLnZhbGlkYXRlZCwgaW5wdXQuZGF0YSwgY29udGV4dClcbiAgY29uc3QgcmVzcG9uc2UgPSB7IGRhdGE6IHsgcmVzdWx0IH0sIHN0YXR1czogMjAwIH1cbiAgcmV0dXJuIFJlcXVlc3Rlci5zdWNjZXNzKGpvYlJ1bklELCByZXNwb25zZSlcbn1cblxuZXhwb3J0IGRlZmF1bHQgZXhlY3V0ZVxuIl19