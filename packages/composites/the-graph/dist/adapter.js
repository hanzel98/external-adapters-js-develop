"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeExecute = exports.execute = void 0;
const ea_bootstrap_1 = require("@chainlink/ea-bootstrap");
const methods_1 = require("./methods");
const config_1 = require("./config");
const customParams = {
    method: false,
};
const execute = async (input, context, config) => {
    const validator = new ea_bootstrap_1.Validator(input, customParams);
    if (validator.error)
        throw validator.error;
    const jobRunID = validator.validated.jobRunID;
    const method = validator.validated.data.method;
    let response;
    switch (method) {
        case methods_1.prices.NAME:
        default:
            response = await methods_1.prices.execute(input, context, config);
    }
    return ea_bootstrap_1.Requester.success(jobRunID, response);
};
exports.execute = execute;
const makeExecute = () => {
    return async (request, context) => exports.execute(request, context, config_1.makeConfig());
};
exports.makeExecute = makeExecute;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRhcHRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9hZGFwdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDBEQUE4RDtBQUU5RCx1Q0FBa0M7QUFDbEMscUNBQTZDO0FBRTdDLE1BQU0sWUFBWSxHQUFHO0lBQ25CLE1BQU0sRUFBRSxLQUFLO0NBQ2QsQ0FBQTtBQUVNLE1BQU0sT0FBTyxHQUE4QixLQUFLLEVBQ3JELEtBQUssRUFDTCxPQUFPLEVBQ1AsTUFBTSxFQUNvQixFQUFFO0lBQzVCLE1BQU0sU0FBUyxHQUFHLElBQUksd0JBQVMsQ0FBQyxLQUFLLEVBQUUsWUFBWSxDQUFDLENBQUE7SUFDcEQsSUFBSSxTQUFTLENBQUMsS0FBSztRQUFFLE1BQU0sU0FBUyxDQUFDLEtBQUssQ0FBQTtJQUMxQyxNQUFNLFFBQVEsR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQTtJQUM3QyxNQUFNLE1BQU0sR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUE7SUFDOUMsSUFBSSxRQUFRLENBQUE7SUFDWixRQUFRLE1BQU0sRUFBRTtRQUNkLEtBQUssZ0JBQU0sQ0FBQyxJQUFJLENBQUM7UUFDakI7WUFDRSxRQUFRLEdBQUcsTUFBTSxnQkFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLE1BQU0sQ0FBQyxDQUFBO0tBQzFEO0lBQ0QsT0FBTyx3QkFBUyxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsUUFBUSxDQUFDLENBQUE7QUFDOUMsQ0FBQyxDQUFBO0FBaEJZLFFBQUEsT0FBTyxXQWdCbkI7QUFFTSxNQUFNLFdBQVcsR0FBRyxHQUFZLEVBQUU7SUFDdkMsT0FBTyxLQUFLLEVBQUUsT0FBdUIsRUFBRSxPQUFPLEVBQUUsRUFBRSxDQUFDLGVBQU8sQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLG1CQUFVLEVBQUUsQ0FBQyxDQUFBO0FBQzVGLENBQUMsQ0FBQTtBQUZZLFFBQUEsV0FBVyxlQUV2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlcXVlc3RlciwgVmFsaWRhdG9yIH0gZnJvbSAnQGNoYWlubGluay9lYS1ib290c3RyYXAnXG5pbXBvcnQgeyBBZGFwdGVyUmVxdWVzdCwgQWRhcHRlclJlc3BvbnNlLCBFeGVjdXRlLCBFeGVjdXRlV2l0aENvbmZpZyB9IGZyb20gJ0BjaGFpbmxpbmsvdHlwZXMnXG5pbXBvcnQgeyBwcmljZXMgfSBmcm9tICcuL21ldGhvZHMnXG5pbXBvcnQgeyBtYWtlQ29uZmlnLCBDb25maWcgfSBmcm9tICcuL2NvbmZpZydcblxuY29uc3QgY3VzdG9tUGFyYW1zID0ge1xuICBtZXRob2Q6IGZhbHNlLFxufVxuXG5leHBvcnQgY29uc3QgZXhlY3V0ZTogRXhlY3V0ZVdpdGhDb25maWc8Q29uZmlnPiA9IGFzeW5jIChcbiAgaW5wdXQsXG4gIGNvbnRleHQsXG4gIGNvbmZpZyxcbik6IFByb21pc2U8QWRhcHRlclJlc3BvbnNlPiA9PiB7XG4gIGNvbnN0IHZhbGlkYXRvciA9IG5ldyBWYWxpZGF0b3IoaW5wdXQsIGN1c3RvbVBhcmFtcylcbiAgaWYgKHZhbGlkYXRvci5lcnJvcikgdGhyb3cgdmFsaWRhdG9yLmVycm9yXG4gIGNvbnN0IGpvYlJ1bklEID0gdmFsaWRhdG9yLnZhbGlkYXRlZC5qb2JSdW5JRFxuICBjb25zdCBtZXRob2QgPSB2YWxpZGF0b3IudmFsaWRhdGVkLmRhdGEubWV0aG9kXG4gIGxldCByZXNwb25zZVxuICBzd2l0Y2ggKG1ldGhvZCkge1xuICAgIGNhc2UgcHJpY2VzLk5BTUU6XG4gICAgZGVmYXVsdDpcbiAgICAgIHJlc3BvbnNlID0gYXdhaXQgcHJpY2VzLmV4ZWN1dGUoaW5wdXQsIGNvbnRleHQsIGNvbmZpZylcbiAgfVxuICByZXR1cm4gUmVxdWVzdGVyLnN1Y2Nlc3Moam9iUnVuSUQsIHJlc3BvbnNlKVxufVxuXG5leHBvcnQgY29uc3QgbWFrZUV4ZWN1dGUgPSAoKTogRXhlY3V0ZSA9PiB7XG4gIHJldHVybiBhc3luYyAocmVxdWVzdDogQWRhcHRlclJlcXVlc3QsIGNvbnRleHQpID0+IGV4ZWN1dGUocmVxdWVzdCwgY29udGV4dCwgbWFrZUNvbmZpZygpKVxufVxuIl19