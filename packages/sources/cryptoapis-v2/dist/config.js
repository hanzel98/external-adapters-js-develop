"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TESTNET_BLOCKCHAINS_BY_PLATFORM = exports.isChainType = exports.CHAIN_KEYS = exports.isCoinType = exports.BLOCKCHAIN_NAME_BY_TICKER = exports.makeConfig = exports.NAME = exports.DEFAULT_ENDPOINT = void 0;
const ea_bootstrap_1 = require("@chainlink/ea-bootstrap");
exports.DEFAULT_ENDPOINT = 'price';
exports.NAME = 'CRYPTOAPIS_V2';
const makeConfig = (prefix) => {
    const config = ea_bootstrap_1.Requester.getDefaultConfig(prefix, true);
    config.api.headers['X-API-Key'] = config.apiKey;
    config.api.baseURL = 'https://rest.cryptoapis.io';
    return config;
};
exports.makeConfig = makeConfig;
exports.BLOCKCHAIN_NAME_BY_TICKER = {
    btc: 'bitcoin',
    eth: 'ethereum',
    ltc: 'litecoin',
    etc: 'ethereum-classic',
    bch: 'bitcoin-cash',
    dash: 'dash',
    doge: 'dogecoin',
};
function isCoinType(key) {
    return !!exports.BLOCKCHAIN_NAME_BY_TICKER[key.toLowerCase()];
}
exports.isCoinType = isCoinType;
exports.CHAIN_KEYS = ['mainnet', 'testnet'];
function isChainType(key) {
    return exports.CHAIN_KEYS.includes(key);
}
exports.isChainType = isChainType;
exports.TESTNET_BLOCKCHAINS_BY_PLATFORM = {
    ethereum: 'rinkeby',
    'ethereum-classic': 'mordor',
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSwwREFBbUQ7QUFHdEMsUUFBQSxnQkFBZ0IsR0FBRyxPQUFPLENBQUE7QUFDMUIsUUFBQSxJQUFJLEdBQUcsZUFBZSxDQUFBO0FBRTVCLE1BQU0sVUFBVSxHQUFHLENBQUMsTUFBZSxFQUFVLEVBQUU7SUFDcEQsTUFBTSxNQUFNLEdBQUcsd0JBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUE7SUFDdkQsTUFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQTtJQUMvQyxNQUFNLENBQUMsR0FBRyxDQUFDLE9BQU8sR0FBRyw0QkFBNEIsQ0FBQTtJQUNqRCxPQUFPLE1BQU0sQ0FBQTtBQUNmLENBQUMsQ0FBQTtBQUxZLFFBQUEsVUFBVSxjQUt0QjtBQUVZLFFBQUEseUJBQXlCLEdBQUc7SUFDdkMsR0FBRyxFQUFFLFNBQVM7SUFDZCxHQUFHLEVBQUUsVUFBVTtJQUNmLEdBQUcsRUFBRSxVQUFVO0lBQ2YsR0FBRyxFQUFFLGtCQUFrQjtJQUN2QixHQUFHLEVBQUUsY0FBYztJQUNuQixJQUFJLEVBQUUsTUFBTTtJQUNaLElBQUksRUFBRSxVQUFVO0NBQ1IsQ0FBQTtBQUdWLFNBQWdCLFVBQVUsQ0FBQyxHQUFXO0lBQ3BDLE9BQU8sQ0FBQyxDQUFDLGlDQUF5QixDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQXVCLENBQUMsQ0FBQTtBQUM1RSxDQUFDO0FBRkQsZ0NBRUM7QUFDWSxRQUFBLFVBQVUsR0FBRyxDQUFDLFNBQVMsRUFBRSxTQUFTLENBQVUsQ0FBQTtBQUV6RCxTQUFnQixXQUFXLENBQUMsR0FBVztJQUNyQyxPQUFPLGtCQUFVLENBQUMsUUFBUSxDQUFDLEdBQWdCLENBQUMsQ0FBQTtBQUM5QyxDQUFDO0FBRkQsa0NBRUM7QUFFWSxRQUFBLCtCQUErQixHQUFHO0lBQzdDLFFBQVEsRUFBRSxTQUFTO0lBQ25CLGtCQUFrQixFQUFFLFFBQVE7Q0FDcEIsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlcXVlc3RlciB9IGZyb20gJ0BjaGFpbmxpbmsvZWEtYm9vdHN0cmFwJ1xuaW1wb3J0IHsgQ29uZmlnIH0gZnJvbSAnQGNoYWlubGluay90eXBlcydcblxuZXhwb3J0IGNvbnN0IERFRkFVTFRfRU5EUE9JTlQgPSAncHJpY2UnXG5leHBvcnQgY29uc3QgTkFNRSA9ICdDUllQVE9BUElTX1YyJ1xuXG5leHBvcnQgY29uc3QgbWFrZUNvbmZpZyA9IChwcmVmaXg/OiBzdHJpbmcpOiBDb25maWcgPT4ge1xuICBjb25zdCBjb25maWcgPSBSZXF1ZXN0ZXIuZ2V0RGVmYXVsdENvbmZpZyhwcmVmaXgsIHRydWUpXG4gIGNvbmZpZy5hcGkuaGVhZGVyc1snWC1BUEktS2V5J10gPSBjb25maWcuYXBpS2V5XG4gIGNvbmZpZy5hcGkuYmFzZVVSTCA9ICdodHRwczovL3Jlc3QuY3J5cHRvYXBpcy5pbydcbiAgcmV0dXJuIGNvbmZpZ1xufVxuXG5leHBvcnQgY29uc3QgQkxPQ0tDSEFJTl9OQU1FX0JZX1RJQ0tFUiA9IHtcbiAgYnRjOiAnYml0Y29pbicsXG4gIGV0aDogJ2V0aGVyZXVtJyxcbiAgbHRjOiAnbGl0ZWNvaW4nLFxuICBldGM6ICdldGhlcmV1bS1jbGFzc2ljJyxcbiAgYmNoOiAnYml0Y29pbi1jYXNoJyxcbiAgZGFzaDogJ2Rhc2gnLFxuICBkb2dlOiAnZG9nZWNvaW4nLFxufSBhcyBjb25zdFxuZXhwb3J0IHR5cGUgQmxvY2tjaGFpblRpY2tlcnMgPSBrZXlvZiB0eXBlb2YgQkxPQ0tDSEFJTl9OQU1FX0JZX1RJQ0tFUlxuXG5leHBvcnQgZnVuY3Rpb24gaXNDb2luVHlwZShrZXk6IHN0cmluZyk6IGtleSBpcyBrZXlvZiB0eXBlb2YgQkxPQ0tDSEFJTl9OQU1FX0JZX1RJQ0tFUiB7XG4gIHJldHVybiAhIUJMT0NLQ0hBSU5fTkFNRV9CWV9USUNLRVJba2V5LnRvTG93ZXJDYXNlKCkgYXMgQmxvY2tjaGFpblRpY2tlcnNdXG59XG5leHBvcnQgY29uc3QgQ0hBSU5fS0VZUyA9IFsnbWFpbm5ldCcsICd0ZXN0bmV0J10gYXMgY29uc3RcbmV4cG9ydCB0eXBlIENoYWluVHlwZSA9IHR5cGVvZiBDSEFJTl9LRVlTW251bWJlcl1cbmV4cG9ydCBmdW5jdGlvbiBpc0NoYWluVHlwZShrZXk6IHN0cmluZyk6IGtleSBpcyBDaGFpblR5cGUge1xuICByZXR1cm4gQ0hBSU5fS0VZUy5pbmNsdWRlcyhrZXkgYXMgQ2hhaW5UeXBlKVxufVxuXG5leHBvcnQgY29uc3QgVEVTVE5FVF9CTE9DS0NIQUlOU19CWV9QTEFURk9STSA9IHtcbiAgZXRoZXJldW06ICdyaW5rZWJ5JyxcbiAgJ2V0aGVyZXVtLWNsYXNzaWMnOiAnbW9yZG9yJyxcbn0gYXMgY29uc3RcbiJdfQ==