"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeConfig = exports.BLOCKCHAINS = exports.isChainType = exports.CHAIN_KEYS = exports.isCoinType = exports.COIN_KEYS = exports.DEFAULT_WS_API_ENDPOINT = exports.DEFAULT_API_ENDPOINT = exports.NAME = void 0;
const ea_bootstrap_1 = require("@chainlink/ea-bootstrap");
exports.NAME = 'AMBERDATA';
exports.DEFAULT_API_ENDPOINT = 'https://web3api.io';
exports.DEFAULT_WS_API_ENDPOINT = 'wss://ws.web3api.io';
exports.COIN_KEYS = ['btc', 'eth', 'bch', 'ltc', 'btsv', 'zec'];
function isCoinType(key) {
    return exports.COIN_KEYS.includes(key);
}
exports.isCoinType = isCoinType;
exports.CHAIN_KEYS = ['mainnet'];
function isChainType(key) {
    return exports.CHAIN_KEYS.includes(key);
}
exports.isChainType = isChainType;
exports.BLOCKCHAINS = {
    btc: 'bitcoin',
    eth: 'ethereum',
    bch: 'bitcoin-abc',
    ltc: 'litecoin',
    btsv: 'bitcoin-sv',
    zec: 'zcash',
};
const DEFAULT_ENDPOINT = 'price';
const makeConfig = (prefix = '') => {
    const config = ea_bootstrap_1.Requester.getDefaultConfig(prefix, true);
    config.api.headers['x-api-key'] = config.apiKey;
    config.api.baseURL = config.api.baseURL || exports.DEFAULT_API_ENDPOINT;
    config.defaultEndpoint = DEFAULT_ENDPOINT;
    return config;
};
exports.makeConfig = makeConfig;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSwwREFBbUQ7QUFHdEMsUUFBQSxJQUFJLEdBQUcsV0FBVyxDQUFBO0FBRWxCLFFBQUEsb0JBQW9CLEdBQUcsb0JBQW9CLENBQUE7QUFDM0MsUUFBQSx1QkFBdUIsR0FBRyxxQkFBcUIsQ0FBQTtBQUUvQyxRQUFBLFNBQVMsR0FBRyxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsS0FBSyxDQUFVLENBQUE7QUFFN0UsU0FBZ0IsVUFBVSxDQUFDLEdBQVc7SUFDcEMsT0FBTyxpQkFBUyxDQUFDLFFBQVEsQ0FBQyxHQUFlLENBQUMsQ0FBQTtBQUM1QyxDQUFDO0FBRkQsZ0NBRUM7QUFDWSxRQUFBLFVBQVUsR0FBRyxDQUFDLFNBQVMsQ0FBVSxDQUFBO0FBRTlDLFNBQWdCLFdBQVcsQ0FBQyxHQUFXO0lBQ3JDLE9BQU8sa0JBQVUsQ0FBQyxRQUFRLENBQUMsR0FBZ0IsQ0FBQyxDQUFBO0FBQzlDLENBQUM7QUFGRCxrQ0FFQztBQUVZLFFBQUEsV0FBVyxHQUFpQztJQUN2RCxHQUFHLEVBQUUsU0FBUztJQUNkLEdBQUcsRUFBRSxVQUFVO0lBQ2YsR0FBRyxFQUFFLGFBQWE7SUFDbEIsR0FBRyxFQUFFLFVBQVU7SUFDZixJQUFJLEVBQUUsWUFBWTtJQUNsQixHQUFHLEVBQUUsT0FBTztDQUNiLENBQUE7QUFFRCxNQUFNLGdCQUFnQixHQUFHLE9BQU8sQ0FBQTtBQUV6QixNQUFNLFVBQVUsR0FBRyxDQUFDLE1BQU0sR0FBRyxFQUFFLEVBQVUsRUFBRTtJQUNoRCxNQUFNLE1BQU0sR0FBRyx3QkFBUyxDQUFDLGdCQUFnQixDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQTtJQUN2RCxNQUFNLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFBO0lBQy9DLE1BQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxJQUFJLDRCQUFvQixDQUFBO0lBQy9ELE1BQU0sQ0FBQyxlQUFlLEdBQUcsZ0JBQWdCLENBQUE7SUFDekMsT0FBTyxNQUFNLENBQUE7QUFDZixDQUFDLENBQUE7QUFOWSxRQUFBLFVBQVUsY0FNdEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZXF1ZXN0ZXIgfSBmcm9tICdAY2hhaW5saW5rL2VhLWJvb3RzdHJhcCdcbmltcG9ydCB7IENvbmZpZyB9IGZyb20gJ0BjaGFpbmxpbmsvdHlwZXMnXG5cbmV4cG9ydCBjb25zdCBOQU1FID0gJ0FNQkVSREFUQSdcblxuZXhwb3J0IGNvbnN0IERFRkFVTFRfQVBJX0VORFBPSU5UID0gJ2h0dHBzOi8vd2ViM2FwaS5pbydcbmV4cG9ydCBjb25zdCBERUZBVUxUX1dTX0FQSV9FTkRQT0lOVCA9ICd3c3M6Ly93cy53ZWIzYXBpLmlvJ1xuXG5leHBvcnQgY29uc3QgQ09JTl9LRVlTID0gWydidGMnLCAnZXRoJywgJ2JjaCcsICdsdGMnLCAnYnRzdicsICd6ZWMnXSBhcyBjb25zdFxuZXhwb3J0IHR5cGUgQ29pblR5cGUgPSB0eXBlb2YgQ09JTl9LRVlTW251bWJlcl1cbmV4cG9ydCBmdW5jdGlvbiBpc0NvaW5UeXBlKGtleTogc3RyaW5nKToga2V5IGlzIENvaW5UeXBlIHtcbiAgcmV0dXJuIENPSU5fS0VZUy5pbmNsdWRlcyhrZXkgYXMgQ29pblR5cGUpXG59XG5leHBvcnQgY29uc3QgQ0hBSU5fS0VZUyA9IFsnbWFpbm5ldCddIGFzIGNvbnN0XG5leHBvcnQgdHlwZSBDaGFpblR5cGUgPSB0eXBlb2YgQ0hBSU5fS0VZU1tudW1iZXJdXG5leHBvcnQgZnVuY3Rpb24gaXNDaGFpblR5cGUoa2V5OiBzdHJpbmcpOiBrZXkgaXMgQ2hhaW5UeXBlIHtcbiAgcmV0dXJuIENIQUlOX0tFWVMuaW5jbHVkZXMoa2V5IGFzIENoYWluVHlwZSlcbn1cblxuZXhwb3J0IGNvbnN0IEJMT0NLQ0hBSU5TOiB7IFt0aWNrZXI6IHN0cmluZ106IHN0cmluZyB9ID0ge1xuICBidGM6ICdiaXRjb2luJyxcbiAgZXRoOiAnZXRoZXJldW0nLFxuICBiY2g6ICdiaXRjb2luLWFiYycsXG4gIGx0YzogJ2xpdGVjb2luJyxcbiAgYnRzdjogJ2JpdGNvaW4tc3YnLFxuICB6ZWM6ICd6Y2FzaCcsXG59XG5cbmNvbnN0IERFRkFVTFRfRU5EUE9JTlQgPSAncHJpY2UnXG5cbmV4cG9ydCBjb25zdCBtYWtlQ29uZmlnID0gKHByZWZpeCA9ICcnKTogQ29uZmlnID0+IHtcbiAgY29uc3QgY29uZmlnID0gUmVxdWVzdGVyLmdldERlZmF1bHRDb25maWcocHJlZml4LCB0cnVlKVxuICBjb25maWcuYXBpLmhlYWRlcnNbJ3gtYXBpLWtleSddID0gY29uZmlnLmFwaUtleVxuICBjb25maWcuYXBpLmJhc2VVUkwgPSBjb25maWcuYXBpLmJhc2VVUkwgfHwgREVGQVVMVF9BUElfRU5EUE9JTlRcbiAgY29uZmlnLmRlZmF1bHRFbmRwb2ludCA9IERFRkFVTFRfRU5EUE9JTlRcbiAgcmV0dXJuIGNvbmZpZ1xufVxuIl19