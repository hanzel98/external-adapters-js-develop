import { ExecuteWithConfig } from '@chainlink/types';
import { Config } from '../../../config';
export declare const NAME = "player-stats";
export interface ResponseSchema {
    epochS: number;
    StatID: number;
    TeamID: number;
    PlayerID: number;
    SeasonType: number;
    Season: number;
    Name: string;
    Team: string;
    Position: string;
    Started: number;
    FanDuelSalary: number;
    DraftKingSalary: number;
    FantasyDuelSalary: number;
    YahooSalary: number | null;
    InjuryStatus: string | null;
    InjuryBodyPart: string | null;
    InjuryStartDate: string | null;
    InjuryNotes: string | null;
    FanDuelPosition: string;
    DraftKingPosition: string;
    YahooPosition: string | null;
    OpponentRank: number;
    OpponentPositionRank: number;
    GlobalTeamID: number;
    FantasyDraftSalary: number | null;
    FantasyDraftPosition: string | null;
    GameID: number;
    OpponentID: number;
    Opponent: string;
    Day: string;
    DateTime: string;
    HomeOrAway: string;
    isGameOver: true;
    GlobalGameID: number;
    GlobalOpponentID: number;
    Updated: string;
    Games: number;
    FantasyPoints: number;
    Minutes: number;
    Seconds: number;
    FieldGoalsMade: number;
    FieldGoalsAttempted: number;
    FieldGoalsPercentage: number;
    EffectiveFieldGoalsPercentage: number;
    TwoPointersMade: number;
    TwoPointersAttempted: number;
    TwoPointersPercentage: number;
    ThreePointersMade: number;
    ThreePointersAttempted: number;
    ThreePointersPercentage: number;
    FreeThrowsMade: number;
    FreeThrowsAttempted: number;
    FreeThrowPercentage: number;
    OffensiveRebounds: number;
    DefensiveRebounds: number;
    Rebounds: number;
    OffensiveReboundsPercentage: number;
    DefensiveReboundsPercenage: number;
    TotalReboundsPercentage: number;
    Assists: number;
    Steals: number;
    BlockedShots: number;
    Turnovers: number;
    PersonalFouls: number;
    Points: number;
    TrueShootingAttempts: number;
    TrueShootingPercentage: number;
    PlayerEfficiencyRating: number;
    AssistsPercentage: number;
    StealsPercentage: number;
    BlocksPercentage: number;
    TurnOversPercentage: number;
    UsageRatePercentage: number;
    FantasyPointsFanDuel: number;
    FantasyPointsDraftKings: number;
    FantasyPointsYahoo: number;
    PlusMinus: number;
    DoubleDoubles: number;
    TripleDoubles: number;
    FantasyPointsFantasyDraft: number;
    isClosed: boolean;
    LineupConfirmed: boolean;
    LineupStatus: string;
}
export declare const execute: ExecuteWithConfig<Config>;
//# sourceMappingURL=player-stats.d.ts.map