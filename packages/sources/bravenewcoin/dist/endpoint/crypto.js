"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.execute = exports.inputParameters = exports.supportedEndpoints = void 0;
const ea_bootstrap_1 = require("@chainlink/ea-bootstrap");
const helpers_1 = require("../helpers");
exports.supportedEndpoints = ['crypto', 'price'];
exports.inputParameters = {
    base: ['base', 'from', 'coin'],
    quote: ['quote', 'to', 'market'],
};
const execute = async (request, _, config) => {
    const validator = new ea_bootstrap_1.Validator(request, exports.inputParameters);
    if (validator.error)
        throw validator.error;
    const jobRunID = validator.validated.id;
    const from = validator.validated.data.base;
    const to = validator.validated.data.quote;
    const token = await helpers_1.authenticate();
    const baseAssetId = await helpers_1.getAssetId(from);
    const quoteAssetId = to.toUpperCase() === 'USD' ? 'USD' : await helpers_1.getAssetId(to);
    const response = await helpers_1.convert(token, baseAssetId, quoteAssetId);
    return ea_bootstrap_1.Requester.success(jobRunID, response, config.verbose);
};
exports.execute = execute;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3J5cHRvLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2VuZHBvaW50L2NyeXB0by50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSwwREFBOEQ7QUFFOUQsd0NBQThEO0FBRWpELFFBQUEsa0JBQWtCLEdBQUcsQ0FBQyxRQUFRLEVBQUUsT0FBTyxDQUFDLENBQUE7QUFFeEMsUUFBQSxlQUFlLEdBQW9CO0lBQzlDLElBQUksRUFBRSxDQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxDQUFDO0lBQzlCLEtBQUssRUFBRSxDQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUUsUUFBUSxDQUFDO0NBQ2pDLENBQUE7QUFFTSxNQUFNLE9BQU8sR0FBOEIsS0FBSyxFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUUsTUFBTSxFQUFFLEVBQUU7SUFDN0UsTUFBTSxTQUFTLEdBQUcsSUFBSSx3QkFBUyxDQUFDLE9BQU8sRUFBRSx1QkFBZSxDQUFDLENBQUE7SUFDekQsSUFBSSxTQUFTLENBQUMsS0FBSztRQUFFLE1BQU0sU0FBUyxDQUFDLEtBQUssQ0FBQTtJQUUxQyxNQUFNLFFBQVEsR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQTtJQUN2QyxNQUFNLElBQUksR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUE7SUFDMUMsTUFBTSxFQUFFLEdBQUcsU0FBUyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFBO0lBRXpDLE1BQU0sS0FBSyxHQUFHLE1BQU0sc0JBQVksRUFBRSxDQUFBO0lBQ2xDLE1BQU0sV0FBVyxHQUFHLE1BQU0sb0JBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQTtJQUMxQyxNQUFNLFlBQVksR0FBRyxFQUFFLENBQUMsV0FBVyxFQUFFLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLE1BQU0sb0JBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQTtJQUU5RSxNQUFNLFFBQVEsR0FBRyxNQUFNLGlCQUFPLENBQUMsS0FBSyxFQUFFLFdBQVcsRUFBRSxZQUFZLENBQUMsQ0FBQTtJQUVoRSxPQUFPLHdCQUFTLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxRQUFRLEVBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFBO0FBQzlELENBQUMsQ0FBQTtBQWZZLFFBQUEsT0FBTyxXQWVuQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlcXVlc3RlciwgVmFsaWRhdG9yIH0gZnJvbSAnQGNoYWlubGluay9lYS1ib290c3RyYXAnXG5pbXBvcnQgeyBDb25maWcsIEV4ZWN1dGVXaXRoQ29uZmlnLCBJbnB1dFBhcmFtZXRlcnMgfSBmcm9tICdAY2hhaW5saW5rL3R5cGVzJ1xuaW1wb3J0IHsgYXV0aGVudGljYXRlLCBjb252ZXJ0LCBnZXRBc3NldElkIH0gZnJvbSAnLi4vaGVscGVycydcblxuZXhwb3J0IGNvbnN0IHN1cHBvcnRlZEVuZHBvaW50cyA9IFsnY3J5cHRvJywgJ3ByaWNlJ11cblxuZXhwb3J0IGNvbnN0IGlucHV0UGFyYW1ldGVyczogSW5wdXRQYXJhbWV0ZXJzID0ge1xuICBiYXNlOiBbJ2Jhc2UnLCAnZnJvbScsICdjb2luJ10sXG4gIHF1b3RlOiBbJ3F1b3RlJywgJ3RvJywgJ21hcmtldCddLFxufVxuXG5leHBvcnQgY29uc3QgZXhlY3V0ZTogRXhlY3V0ZVdpdGhDb25maWc8Q29uZmlnPiA9IGFzeW5jIChyZXF1ZXN0LCBfLCBjb25maWcpID0+IHtcbiAgY29uc3QgdmFsaWRhdG9yID0gbmV3IFZhbGlkYXRvcihyZXF1ZXN0LCBpbnB1dFBhcmFtZXRlcnMpXG4gIGlmICh2YWxpZGF0b3IuZXJyb3IpIHRocm93IHZhbGlkYXRvci5lcnJvclxuXG4gIGNvbnN0IGpvYlJ1bklEID0gdmFsaWRhdG9yLnZhbGlkYXRlZC5pZFxuICBjb25zdCBmcm9tID0gdmFsaWRhdG9yLnZhbGlkYXRlZC5kYXRhLmJhc2VcbiAgY29uc3QgdG8gPSB2YWxpZGF0b3IudmFsaWRhdGVkLmRhdGEucXVvdGVcblxuICBjb25zdCB0b2tlbiA9IGF3YWl0IGF1dGhlbnRpY2F0ZSgpXG4gIGNvbnN0IGJhc2VBc3NldElkID0gYXdhaXQgZ2V0QXNzZXRJZChmcm9tKVxuICBjb25zdCBxdW90ZUFzc2V0SWQgPSB0by50b1VwcGVyQ2FzZSgpID09PSAnVVNEJyA/ICdVU0QnIDogYXdhaXQgZ2V0QXNzZXRJZCh0bylcblxuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGNvbnZlcnQodG9rZW4sIGJhc2VBc3NldElkLCBxdW90ZUFzc2V0SWQpXG5cbiAgcmV0dXJuIFJlcXVlc3Rlci5zdWNjZXNzKGpvYlJ1bklELCByZXNwb25zZSwgY29uZmlnLnZlcmJvc2UpXG59XG4iXX0=